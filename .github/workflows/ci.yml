name: ci

on:
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: '00 0 * * *'

jobs:
  clippy:
    name: clippy-${{ matrix.os_name }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            os_name: ubuntu
            features: '"std v1 v3 v4 v5"'
          - os: windows-latest
            os_name: windows
            features: '"guid std v1 v3 v4 v5"'
        os:
          - ubuntu-latest
          - windows-latest
        prefix:
          - '-no-default-features'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.32.0
          override: true
          profile: minimal
          components: clippy

      - name: Clippy Check
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: ${{ matrix.prefix }} ${{ matrix.features }} -- -D
          warnings
  fmt:
    name: fmt
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.32.0
          override: true
          profile: minimal
          components: rustfmt

      - name: Rustfmt Check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  test:
    name: test-${{ matrix.target }}-${{ matrix.toolchain }} (${{ matrix
    .features }})
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: macOS-latest
            target: i686-apple-darwin
          - os: macOS-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: i686-pc-windows-gnu
          - os: windows-latest
            target: i686-pc-windows-msvc
          - os: windows-latest
            target: x86_64-pc-windows-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os:
              - macOS-latest
              - ubuntu-latest
            features:
              - '--no-default-features'
              - '--all-features'
        os:
          - macOS-latest
          - ubuntu-latest
          - windows-latest
        toolchain:
          - 1.32.0
          - stable
          - beta
          - nightly

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          override: true
          profile: minimal